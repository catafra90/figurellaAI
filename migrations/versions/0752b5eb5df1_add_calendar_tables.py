"""add calendar tables

Revision ID: 0752b5eb5df1
Revises: f99fcc5002c4
Create Date: 2025-08-11 14:02:00.185857

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0752b5eb5df1'
down_revision = 'f99fcc5002c4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('all_day', sa.Boolean(), server_default=sa.text('0'), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('assignee', sa.String(length=120), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint('(end IS NULL) OR (end >= start)', name='ck_events_end_after_start'),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_events_assignee'), ['assignee'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_client_id'), ['client_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_events_start'), ['start'], unique=False)

    op.create_table('reminders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('remind_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('channel', sa.String(length=32), nullable=False),
    sa.Column('sent', sa.Boolean(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reminders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reminders_event_id'), ['event_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reminders_remind_at'), ['remind_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_reminders_sent'), ['sent'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reminders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reminders_sent'))
        batch_op.drop_index(batch_op.f('ix_reminders_remind_at'))
        batch_op.drop_index(batch_op.f('ix_reminders_event_id'))

    op.drop_table('reminders')
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_events_start'))
        batch_op.drop_index(batch_op.f('ix_events_client_id'))
        batch_op.drop_index(batch_op.f('ix_events_assignee'))

    op.drop_table('events')
    # ### end Alembic commands ###
